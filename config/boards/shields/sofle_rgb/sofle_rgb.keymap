#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
  keymap {
    compatible = "zmk,keymap";

    default_layer {
      bindings = <
        &kp ESC          &kp N1   &kp N2    &kp N3    &kp N4   &kp N5                            &kp N6  &kp N7   &kp N8    &kp N9  &kp N0    &kp BACKSPACE
        &kp TAB          &kp Q    &kp W     &kp E     &kp R    &kp T                             &kp Y   &kp U    &kp I     &kp O   &kp P     &kp BACKSLASH
        &kp LCTRL        &kp A    &kp S     &kp D     &kp F    &kp G                             &kp H   &kp J    &kp K     &kp L   &kp SEMI  &kp SINGLE_QUOTE
        &mt LSHIFT LPAR  &kp Z    &kp X     &kp C     &kp V    &kp B    &kp C_MUTE &out OUT_TOG  &kp N   &kp M    &kp COMMA &kp DOT &kp SLASH &mt RSHIFT RPAR
                                  &kp CAPS  &kp LCMD &kp LALT &kp SPACE &mo 1      &mo 2         &kp SPACE &kp RET &kp MINUS &kp EQUAL
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    mod_layer {
      bindings = <
        &kp GRAVE &kp F1   &kp F2   &kp F3    &kp F4 &kp F5              &kp F6   &kp F7  &kp F8   &kp F9  &kp F10 &kp BACKSPACE
        &none     &HOME    &kp UP   &END      &none  &none               &kp KP_NUM  &kp KP_N7  &kp KP_N8   &kp KP_N9  &none   &kp F11
        &none     &kp LEFT &kp DOWN &kp RIGHT &none  &none               &none    &kp KP_N4  &kp KP_N5   &kp KP_N6  &none   &kp F12
        &none     &RGB_TOG &none    &none     &none  &none &none  &none  &none    &kp KP_N1  &kp KP_N2   &kp KP_N3  &none   &kp F13
                           &none    &none     &none  &none &trans &trans &kp KP_N0    &none   &tog 3  &tog 4
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp RGB_BRI RGB_BRD>;
    };
	
	mod_layer_a {
      bindings = <
        &kp GRAVE &kp F1  &kp F2  &kp F3 &kp F4 &kp F5                &kp F6 &kp F7  &kp F8 &kp F9  &kp F10 &kp DELETE
        &trans    &trans  &trans  &trans &trans &trans                &trans &trans  &trans &LBKT   &RBKT   &trans
        &trans    &trans  &trans  &trans &trans &trans                &trans &C_PREV &C_PP  &C_NEXT &trans  &trans
        &trans    &trans  &trans  &trans &trans &trans &trans  &trans &trans &trans  &trans &trans  &trans  &trans
                          &trans  &trans &trans &trans &trans  &trans &trans &trans  &tog 3 &tog 4
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    func_layer {
      bindings = <
        &none &bt BT_SEL 0 &bt BT_SEL 1     &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4              &none &none &none &none  &none &bt BT_CLR
        &none &none        &none            &none        &none        &none                     &none &none &none &none  &none &none
        &none &bt BT_PRV   &none            &bt BT_NXT   &none        &none                     &none &none &none &none  &none &none
        &none &none        &none            &none        &none        &none        &none &none  &none &none &none &none  &none &none
                           &none            &none        &none        &trans       &none &none &trans &none &none &none
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

    game_layer {
      bindings = <
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
        &kp LSHIFT &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans
                          &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans
      >;

      sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
    };

  };
};

// layer sample
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none             &none &none &none &none &none &none
//         &none &none &none &none &none &none &none &none &none &none &none &none &none &none
//                     &none &none &none &none &none &none &none &none &none &none
// mod sample
//        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
//        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
//        &trans     &trans &trans &trans &trans &trans                &trans &trans &trans &trans &trans &trans
//        &kp LSHIFT &trans &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans &trans &trans
//                          &trans &trans &trans &trans &trans  &trans &trans &trans &trans &trans
